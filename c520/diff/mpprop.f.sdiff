      SUBROUTINE MPPROP						      SUBROUTINE MPPROP
C								C
C************************************************************	C************************************************************
C  DESIGN  : D. HECK   IK3  FZK KARLSRUHE			C  DESIGN  : D. HECK   IK3  FZK KARLSRUHE
C  DATE    : JUL  14, 1989					C  DATE    : JUL  14, 1989
C************************************************************	C************************************************************
C  SUBROUTINE MOVES MUONS AND PIONS FROM EGS-STACK TO CORSIKA	C  SUBROUTINE MOVES MUONS AND PIONS FROM EGS-STACK TO CORSIKA
C************************************************************	C************************************************************
      DOUBLE PRECISION AMASS					      DOUBLE PRECISION AMASS
C     DOUBLE PRECISION CUT					C     DOUBLE PRECISION CUT
*KEEP,ELABCT.							*KEEP,ELABCT.
      COMMON /ELABCT/  ELCUT					      COMMON /ELABCT/  ELCUT
      DOUBLE PRECISION ELCUT(4)					      DOUBLE PRECISION ELCUT(4)
*KEND.								*KEND.
      DOUBLE PRECISION PRRMMU					      DOUBLE PRECISION PRRMMU
      COMMON/MUON/PRRMMU,RMMU,RMMUT2				      COMMON/MUON/PRRMMU,RMMU,RMMUT2
*KEEP,PARPAR.							*KEEP,PARPAR.
      COMMON /PARPAR/  CURPAR,SECPAR,PRMPAR,OUTPAR,C,		      COMMON /PARPAR/  CURPAR,SECPAR,PRMPAR,OUTPAR,C,
     *                 E00,E00PN,PTOT0,PTOT0N,THICKH,ITYPE,LE	     *                 E00,E00PN,PTOT0,PTOT0N,THICKH,ITYPE,LE
      DOUBLE PRECISION CURPAR(14),SECPAR(14),PRMPAR(14),OUTPA	      DOUBLE PRECISION CURPAR(14),SECPAR(14),PRMPAR(14),OUTPA
     *                 C(50),E00,E00PN,PTOT0,PTOT0N,THICKH	     *                 C(50),E00,E00PN,PTOT0,PTOT0N,THICKH
      INTEGER          ITYPE,LEVL				      INTEGER          ITYPE,LEVL
*KEND.								*KEND.
      DOUBLE PRECISION PI0MSQ					      DOUBLE PRECISION PI0MSQ
      COMMON/PION/PI0MSQ,PITHR,PICMAS,PI0MAS,AMASK0,AMASKC,AM	      COMMON/PION/PI0MSQ,PITHR,PICMAS,PI0MAS,AMASK0,AMASKC,AM
     *								     *
*KEEP,POLAR.							*KEEP,POLAR.
      COMMON /POLAR/   POLART,POLARF				      COMMON /POLAR/   POLART,POLARF
      DOUBLE PRECISION POLART,POLARF				      DOUBLE PRECISION POLART,POLARF
*KEEP,RUNPAR.							*KEEP,RUNPAR.
      COMMON /RUNPAR/  FIXHEI,THICK0,HILOECM,HILOELB,		      COMMON /RUNPAR/  FIXHEI,THICK0,HILOECM,HILOELB,
     *                 STEPFC,NRRUN,NSHOW,PATAPE,MONIIN,	     *                 STEPFC,NRRUN,NSHOW,PATAPE,MONIIN,
     *                 MONIOU,MDEBUG,NUCNUC,			     *                 MONIOU,MDEBUG,NUCNUC,
     *                 CETAPE,					     *                 CETAPE,
     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,	     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,
     *                 N1STTR,MDBASE,				     *                 N1STTR,MDBASE,
     *                 DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC	     *                 DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC
     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE		     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE
     *                ,GHEISH,GHESIG				     *                ,GHEISH,GHESIG
      COMMON /RUNPAC/  DSN,HOST,USER				      COMMON /RUNPAC/  DSN,HOST,USER
      DOUBLE PRECISION FIXHEI,THICK0,HILOECM,HILOELB		      DOUBLE PRECISION FIXHEI,THICK0,HILOECM,HILOELB
      REAL             STEPFC					      REAL             STEPFC
      INTEGER          NRRUN,NSHOW,PATAPE,MONIIN,MONIOU,MDEBU	      INTEGER          NRRUN,NSHOW,PATAPE,MONIIN,MONIOU,MDEBU
     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,	     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,
     *                 N1STTR,MDBASE				     *                 N1STTR,MDBASE
      INTEGER          CETAPE					      INTEGER          CETAPE
      CHARACTER*79     DSN					      CHARACTER*79     DSN
      CHARACTER*20     HOST,USER				      CHARACTER*20     HOST,USER
 								 
      LOGICAL          DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC	      LOGICAL          DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC
     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE		     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE
     *                ,GHEISH,GHESIG				     *                ,GHEISH,GHESIG
*KEEP,STACKE.							*KEEP,STACKE.
      COMMON/STACKE/   E,TIME,X,Y,Z,U,V,W,DNEAR,IQ,IGEN,IR,IO	      COMMON/STACKE/   E,TIME,X,Y,Z,U,V,W,DNEAR,IQ,IGEN,IR,IO
      DOUBLE PRECISION E(60),TIME(60)				      DOUBLE PRECISION E(60),TIME(60)
      REAL             X(60),Y(60),Z(60),U(60),V(60),W(60),DN	      REAL             X(60),Y(60),Z(60),U(60),V(60),W(60),DN
      INTEGER          IQ(60),IGEN(60),IR(60),IOBS(60),LPCTE(	      INTEGER          IQ(60),IGEN(60),IR(60),IOBS(60),LPCTE(
*KEND.								*KEND.
      COMMON/UPHIOT/THETA,SINTHE,COSTHE,SINPHI, COSPHI,PI,TWO	      COMMON/UPHIOT/THETA,SINTHE,COSTHE,SINPHI, COSPHI,PI,TWO
      COMMON/ACLOCK/NCLOCK,JCLOCK				      COMMON/ACLOCK/NCLOCK,JCLOCK
C_____IF (NCLOCK.GT.JCLOCK) THEN				C_____IF (NCLOCK.GT.JCLOCK) THEN
C______WRITE(MDEBUG,* )' MPPROP:NP=',NP,' IR=',IR(NP),' IOBS=	C______WRITE(MDEBUG,* )' MPPROP:NP=',NP,' IR=',IR(NP),' IOBS=
C______CALL AUSGB2						C______CALL AUSGB2
C_____END IF							C_____END IF
C***  SET MASS AND CUT PARAMETER OF PARTICLE UNDER CONSIDERAT	C***  SET MASS AND CUT PARAMETER OF PARTICLE UNDER CONSIDERAT
      IF (IQ(NP).LT.7) THEN					      IF (IQ(NP).LT.7) THEN
       AMASS=PRRMMU						       AMASS=PRRMMU
C      CUT=ELCUT(2)*1000.D0					C      CUT=ELCUT(2)*1000.D0
      ELSEIF(IQ(NP).EQ.7) THEN					      ELSEIF(IQ(NP).EQ.7) THEN
       AMASS=PI0MAS						       AMASS=PI0MAS
C      CUT=ELCUT(1)*1000.D0					C      CUT=ELCUT(1)*1000.D0
       POLART=1.D0						       POLART=1.D0
       POLARF=0.D0						       POLARF=0.D0
      ELSE							      ELSE
       AMASS=PICMAS						       AMASS=PICMAS
C      CUT=ELCUT(1)*1000.D0					C      CUT=ELCUT(1)*1000.D0
       POLART=1.D0						       POLART=1.D0
       POLARF=0.D0						       POLARF=0.D0
      END IF							      END IF
C***  USE PARTICLE ONLY IF ABOVE CUT AND INSIDE ACCEPTANCE CO	C***  USE PARTICLE ONLY IF ABOVE CUT AND INSIDE ACCEPTANCE CO
C     IF (E(NP)-AMASS.GT.CUT .AND. W(NP).GT.C(29)) THEN		C     IF (E(NP)-AMASS.GT.CUT .AND. W(NP).GT.C(29)) THEN
      IF (W(NP).GT.C(29)) THEN					      IF (W(NP).GT.C(29)) THEN
C *** ANGLE WITH RESPECT TO X AXIS				C *** ANGLE WITH RESPECT TO X AXIS
       IF (U(NP)**2+V(NP)**2.GT.3.E-38) THEN			       IF (U(NP)**2+V(NP)**2.GT.3.E-38) THEN
        ANGLEX = -ATAN2(V(NP),U(NP))				        ANGLEX = -ATAN2(V(NP),U(NP))
       ELSE							       ELSE
        ANGLEX = 0.						        ANGLEX = 0.
       END IF							       END IF
C ***  FILL MUON/PION COORDINATES INTO CORSIKA-STACK		C ***  FILL MUON/PION COORDINATES INTO CORSIKA-STACK
       SECPAR(1)=IQ(NP)						       SECPAR(1)=IQ(NP)
       SECPAR(2)=E(NP)/AMASS					       SECPAR(2)=E(NP)/AMASS
       SECPAR(3)=W(NP)						       SECPAR(3)=W(NP)
       SECPAR(4)=ANGLEX						       SECPAR(4)=ANGLEX
       SECPAR(5)=-Z(NP)						       SECPAR(5)=-Z(NP)
       SECPAR(6)=TIME(NP)					       SECPAR(6)=TIME(NP)
       SECPAR(7)=X(NP)						       SECPAR(7)=X(NP)
       SECPAR(8)=-Y(NP)						       SECPAR(8)=-Y(NP)
       SECPAR(9)=IGEN(NP)					       SECPAR(9)=IGEN(NP)
       SECPAR(10)=-Z(NP)					       SECPAR(10)=-Z(NP)
       SECPAR(11)=POLART					       SECPAR(11)=POLART
       SECPAR(12)=POLARF					       SECPAR(12)=POLARF
C ***  ADD MUON/PION TO CORSIKA-STACK				C ***  ADD MUON/PION TO CORSIKA-STACK
       CALL TSTOUT						       CALL TSTOUT
      END IF							      END IF
C***  ELIMINATE MUON/PION FROM EGS-STACK			C***  ELIMINATE MUON/PION FROM EGS-STACK
      POLART=-POLART						      POLART=-POLART
      POLARF=POLARF+PI						      POLARF=POLARF+PI
      NP=NP-1							      NP=NP-1
      RETURN							      RETURN
      END							      END
