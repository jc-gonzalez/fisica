      SUBROUTINE VAPOR(MAPROJ,INEW,JFIN,ITYP,PFRX,PFRY)		      SUBROUTINE VAPOR(MAPROJ,INEW,JFIN,ITYP,PFRX,PFRY)
 								 
C------------------------------------------------------------	C------------------------------------------------------------
C  (E)VAPOR(ATION OF NUCLEONS AND ALPHA PARTICLES FROM FRAGME	C  (E)VAPOR(ATION OF NUCLEONS AND ALPHA PARTICLES FROM FRAGME
C								C
C  TREATES THE REMAINING UNFRAGMENTED NUCLEUS			C  TREATES THE REMAINING UNFRAGMENTED NUCLEUS
C  EVAPORATION FOLLOWING CAMPI APPROXIMATION			C  EVAPORATION FOLLOWING CAMPI APPROXIMATION
C  SEE: X. CAMPI AND J. HUEFNER, PHYS.REV. C24 (1981) 2199	C  SEE: X. CAMPI AND J. HUEFNER, PHYS.REV. C24 (1981) 2199
C  AND  J.J. GAIMARD, THESE UNIVERSITE PARIS 7, (1990)		C  AND  J.J. GAIMARD, THESE UNIVERSITE PARIS 7, (1990)
C  THIS SUBROUTINE IS CALLED FROM SDPM AND VSTORE		C  THIS SUBROUTINE IS CALLED FROM SDPM AND VSTORE
C								C
C  ARGUMENTS INPUT:						C  ARGUMENTS INPUT:
C   MAPROJ       = NUMBER OF NUCLEONS OF PROJECTILE		C   MAPROJ       = NUMBER OF NUCLEONS OF PROJECTILE
C   INEW         = PARTICLE TYPE OF SPECTATOR FRAGMENT		C   INEW         = PARTICLE TYPE OF SPECTATOR FRAGMENT
C  ARGUMENTS OUTPUT:						C  ARGUMENTS OUTPUT:
C   JFIN         = NUMBER OF FRAGMENTS				C   JFIN         = NUMBER OF FRAGMENTS
C   ITYP(1:JFIN) = NATURE (PARTICLE CODE) OF FRAGMENTS (GEANT	C   ITYP(1:JFIN) = NATURE (PARTICLE CODE) OF FRAGMENTS (GEANT
C   PFRX(1:JFIN) = TRANSVERSE MOMENTUM OF FRAGMENTS IN X-DIRE	C   PFRX(1:JFIN) = TRANSVERSE MOMENTUM OF FRAGMENTS IN X-DIRE
C   PFRY(1:JFIN) = TRANSVERSE MOMENTUM OF FRAGMENTS IN Y-DIRE	C   PFRY(1:JFIN) = TRANSVERSE MOMENTUM OF FRAGMENTS IN Y-DIRE
C								C
C  DESIGN  : D. HECK    IK3  FZK KARLSRUHE			C  DESIGN  : D. HECK    IK3  FZK KARLSRUHE
C------------------------------------------------------------	C------------------------------------------------------------
 								 
      IMPLICIT NONE						      IMPLICIT NONE
*KEEP,CONST.							*KEEP,CONST.
      COMMON /CONST/   PI,PI2,OB3,TB3,ENEPER			      COMMON /CONST/   PI,PI2,OB3,TB3,ENEPER
      DOUBLE PRECISION PI,PI2,OB3,TB3,ENEPER			      DOUBLE PRECISION PI,PI2,OB3,TB3,ENEPER
*KEEP,DPMFLG.							*KEEP,DPMFLG.
      COMMON /DPMFLG/  NFLAIN,NFLDIF,NFLPI0,NFLCHE,NFLPIF,NFR	      COMMON /DPMFLG/  NFLAIN,NFLDIF,NFLPI0,NFLCHE,NFLPIF,NFR
      INTEGER          NFLAIN,NFLDIF,NFLPI0,NFLCHE,NFLPIF,NFR	      INTEGER          NFLAIN,NFLDIF,NFLPI0,NFLCHE,NFLPIF,NFR
*KEEP,RANDPA.							*KEEP,RANDPA.
      COMMON /RANDPA/  FAC,U1,U2,RD,NSEQ,ISEED,KNOR		      COMMON /RANDPA/  FAC,U1,U2,RD,NSEQ,ISEED,KNOR
      DOUBLE PRECISION FAC,U1,U2				      DOUBLE PRECISION FAC,U1,U2
      REAL             RD(3000)					      REAL             RD(3000)
      INTEGER          ISEED(103,10),NSEQ			      INTEGER          ISEED(103,10),NSEQ
      LOGICAL          KNOR					      LOGICAL          KNOR
*KEEP,RUNPAR.							*KEEP,RUNPAR.
      COMMON /RUNPAR/  FIXHEI,THICK0,HILOECM,HILOELB,		      COMMON /RUNPAR/  FIXHEI,THICK0,HILOECM,HILOELB,
     *                 STEPFC,NRRUN,NSHOW,PATAPE,MONIIN,	     *                 STEPFC,NRRUN,NSHOW,PATAPE,MONIIN,
     *                 MONIOU,MDEBUG,NUCNUC,			     *                 MONIOU,MDEBUG,NUCNUC,
     *                 CETAPE,					     *                 CETAPE,
     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,	     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,
     *                 N1STTR,MDBASE,				     *                 N1STTR,MDBASE,
     *                 DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC	     *                 DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC
     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE		     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE
     *                ,GHEISH,GHESIG				     *                ,GHEISH,GHESIG
      COMMON /RUNPAC/  DSN,HOST,USER				      COMMON /RUNPAC/  DSN,HOST,USER
      DOUBLE PRECISION FIXHEI,THICK0,HILOECM,HILOELB		      DOUBLE PRECISION FIXHEI,THICK0,HILOECM,HILOELB
      REAL             STEPFC					      REAL             STEPFC
      INTEGER          NRRUN,NSHOW,PATAPE,MONIIN,MONIOU,MDEBU	      INTEGER          NRRUN,NSHOW,PATAPE,MONIIN,MONIOU,MDEBU
     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,	     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,
     *                 N1STTR,MDBASE				     *                 N1STTR,MDBASE
      INTEGER          CETAPE					      INTEGER          CETAPE
      CHARACTER*79     DSN					      CHARACTER*79     DSN
      CHARACTER*20     HOST,USER				      CHARACTER*20     HOST,USER
 								 
      LOGICAL          DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC	      LOGICAL          DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC
     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE		     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE
     *                ,GHEISH,GHESIG				     *                ,GHEISH,GHESIG
*KEND.								*KEND.
 								 
      DOUBLE PRECISION PFR(60),PFRX(60),PFRY(60)		      DOUBLE PRECISION PFR(60),PFRX(60),PFRY(60)
      DOUBLE PRECISION AFIN,AGLH,APRF,BGLH,EEX,PHIFR,RANNOR,S	      DOUBLE PRECISION AFIN,AGLH,APRF,BGLH,EEX,PHIFR,RANNOR,S
      INTEGER          ITYP(60),IARM,INEW,ITYPRM,INRM,IS,IZRM	      INTEGER          ITYP(60),IARM,INEW,ITYPRM,INRM,IS,IZRM
     *                 K,L,LS,MAPROJ,MF,NFIN,NINTA,NNUC,NPRF,	     *                 K,L,LS,MAPROJ,MF,NFIN,NINTA,NNUC,NPRF,
      EXTERNAL         RANNOR					      EXTERNAL         RANNOR
C------------------------------------------------------------	C------------------------------------------------------------
 								 
      IF (DEBUG) WRITE(MDEBUG,*) 'VAPOR : MAPROJ,INEW = ',MAP	      IF (DEBUG) WRITE(MDEBUG,*) 'VAPOR : MAPROJ,INEW = ',MAP
 								 
      ITYPRM = INEW						      ITYPRM = INEW
      NPRF   = INEW/100						      NPRF   = INEW/100
      NINTA  = MAPROJ - NPRF					      NINTA  = MAPROJ - NPRF
      IF ( NINTA .EQ. 0 ) THEN					      IF ( NINTA .EQ. 0 ) THEN
C  NO NUCLEON HAS INTERACTED					C  NO NUCLEON HAS INTERACTED
        JFIN    = 1						        JFIN    = 1
        PFR(1)  = 0.D0						        PFR(1)  = 0.D0
        ITYP(1) = INEW						        ITYP(1) = INEW
        IF (DEBUG) WRITE(MDEBUG,*) 'VAPOR : JFIN,NINTA= ',JFI	        IF (DEBUG) WRITE(MDEBUG,*) 'VAPOR : JFIN,NINTA= ',JFI
        RETURN							        RETURN
      ENDIF							      ENDIF
 								 
C  EXCITATION ENERGY EEX OF PREFRAGMENT				C  EXCITATION ENERGY EEX OF PREFRAGMENT
C  SEE: J.J. GAIMARD, THESE UNIVERSITE PARIS 7, (1990), CHPT.	C  SEE: J.J. GAIMARD, THESE UNIVERSITE PARIS 7, (1990), CHPT.
      EEX = 0.D0						      EEX = 0.D0
      CALL RMMAR(RD,2*NINTA,1)					      CALL RMMAR(RD,2*NINTA,1)
      DO  22  L = 1,NINTA					      DO  22  L = 1,NINTA
        IF ( RD(NINTA+L) .LT. RD(L) ) RD(L) = 1. - RD(L)	        IF ( RD(NINTA+L) .LT. RD(L) ) RD(L) = 1. - RD(L)
        EEX = EEX + RD(L)					        EEX = EEX + RD(L)
 22   CONTINUE							 22   CONTINUE
C  DEPTH OF WOODS-SAXON POTENTIAL TO FERMI SURFACE IS 0.040 G	C  DEPTH OF WOODS-SAXON POTENTIAL TO FERMI SURFACE IS 0.040 G
      IF (DEBUG) WRITE(MDEBUG,*)'VAPOR : EEX = ',SNGL(EEX*0.0	      IF (DEBUG) WRITE(MDEBUG,*)'VAPOR : EEX = ',SNGL(EEX*0.0
C  EVAPORATION: EACH EVAPORATION STEP NEEDS ABOUT 0.020 GEV, 	C  EVAPORATION: EACH EVAPORATION STEP NEEDS ABOUT 0.020 GEV, 
C  NSTEP IS EEX * 0.04/0.02 = EEX * 2.				C  NSTEP IS EEX * 0.04/0.02 = EEX * 2.
      NSTEP = INT(EEX*2.D0)					      NSTEP = INT(EEX*2.D0)
 								 
      IF ( NSTEP .LE. 0 ) THEN					      IF ( NSTEP .LE. 0 ) THEN
C  EXCITATION ENERGY TOO SMALL, NO EVAPORATION			C  EXCITATION ENERGY TOO SMALL, NO EVAPORATION
        JFIN = 1						        JFIN = 1
        PFR(1)  = 0.D0						        PFR(1)  = 0.D0
        ITYP(1) = INEW						        ITYP(1) = INEW
        IF (DEBUG) WRITE(MDEBUG,*) 'VAPOR : JFIN,EEX = ',JFIN	        IF (DEBUG) WRITE(MDEBUG,*) 'VAPOR : JFIN,EEX = ',JFIN
        RETURN							        RETURN
      ENDIF							      ENDIF
 								 
C  AFIN IS ATOMIC NUMBER OF FINAL NUCLEUS			C  AFIN IS ATOMIC NUMBER OF FINAL NUCLEUS
      APRF = FLOAT(NPRF)					      APRF = FLOAT(NPRF)
      AFIN = APRF - 1.6D0 * FLOAT(NSTEP)			      AFIN = APRF - 1.6D0 * FLOAT(NSTEP)
      NFIN = MAX( INT(AFIN+0.5D0), 0 )				      NFIN = MAX( INT(AFIN+0.5D0), 0 )
C  CORRESPONDS TO DEFINITION; FRAGMENTATION-EVAPORATION		C  CORRESPONDS TO DEFINITION; FRAGMENTATION-EVAPORATION
C  CONVOLUTION EMU07 /MODEL ABRASION EVAPORATION (JNC FZK APR	C  CONVOLUTION EMU07 /MODEL ABRASION EVAPORATION (JNC FZK APR
C  NNUC IS NUMBER OF EVAPORATING NUCLEONS			C  NNUC IS NUMBER OF EVAPORATING NUCLEONS
      NNUC = NPRF - NFIN					      NNUC = NPRF - NFIN
      IF (DEBUG) WRITE(MDEBUG,*) 'VAPOR : NFIN,NNUC = ',NFIN,	      IF (DEBUG) WRITE(MDEBUG,*) 'VAPOR : NFIN,NNUC = ',NFIN,
      JC = 0							      JC = 0
 								 
      IF     ( NNUC .LE. 0 ) THEN				      IF     ( NNUC .LE. 0 ) THEN
C  NO EVAPORATION						C  NO EVAPORATION
        JFIN = 1						        JFIN = 1
        PFR(1)  = 0.D0						        PFR(1)  = 0.D0
        ITYP(1) = INEW						        ITYP(1) = INEW
        RETURN							        RETURN
 								 
      ELSEIF ( NNUC .GE. 4 ) THEN				      ELSEIF ( NNUC .GE. 4 ) THEN
C  EVAPORATION WITH FORMATION OF ALPHA PARTICLES POSSIBLE	C  EVAPORATION WITH FORMATION OF ALPHA PARTICLES POSSIBLE
C  IARM, IZRM, INRM ARE NUMBER OF NUCLEONS, PROTONS, NEUTRONS	C  IARM, IZRM, INRM ARE NUMBER OF NUCLEONS, PROTONS, NEUTRONS
C  REMAINDER							C  REMAINDER
        DO  31  LS = 1,NSTEP					        DO  31  LS = 1,NSTEP
          IARM = ITYPRM/100					          IARM = ITYPRM/100
          IF ( IARM .LE. 0 ) GOTO 100				          IF ( IARM .LE. 0 ) GOTO 100
          IZRM = MOD(ITYPRM,100)				          IZRM = MOD(ITYPRM,100)
          INRM = IARM - IZRM					          INRM = IARM - IZRM
          JC = JC + 1						          JC = JC + 1
          CALL RMMAR(RD,2,1)					          CALL RMMAR(RD,2,1)
          IF ( RD(1).LT.0.2 .AND. IZRM.GE.2 .AND. INRM.GE.2 )	          IF ( RD(1).LT.0.2 .AND. IZRM.GE.2 .AND. INRM.GE.2 )
            ITYP(JC) = 402					            ITYP(JC) = 402
            NNUC   = NNUC - 4					            NNUC   = NNUC - 4
            ITYPRM = ITYPRM - 402				            ITYPRM = ITYPRM - 402
          ELSE							          ELSE
            IF ( RD(2)*(IZRM+INRM) .LT. IZRM ) THEN		            IF ( RD(2)*(IZRM+INRM) .LT. IZRM ) THEN
              ITYP(JC) = 14					              ITYP(JC) = 14
              ITYPRM   = ITYPRM - 101				              ITYPRM   = ITYPRM - 101
            ELSE						            ELSE
              ITYP(JC) = 13					              ITYP(JC) = 13
              ITYPRM   = ITYPRM - 100				              ITYPRM   = ITYPRM - 100
            ENDIF						            ENDIF
            NNUC = NNUC - 1					            NNUC = NNUC - 1
          ENDIF							          ENDIF
          IF ( NNUC .LE. 0 ) GOTO 50				          IF ( NNUC .LE. 0 ) GOTO 50
 31     CONTINUE						 31     CONTINUE
      ENDIF							      ENDIF
 								 
      IF ( NNUC .LT. 4 ) THEN					      IF ( NNUC .LT. 4 ) THEN
C  EVAPORATION WITHOUT FORMATION OF ALPHA PARTICLES		C  EVAPORATION WITHOUT FORMATION OF ALPHA PARTICLES
        CALL RMMAR(RD,NNUC,1)					        CALL RMMAR(RD,NNUC,1)
        DO  32  IS = 1,NNUC					        DO  32  IS = 1,NNUC
          IARM = ITYPRM/100					          IARM = ITYPRM/100
          IF ( IARM .LE. 0 ) GOTO 100				          IF ( IARM .LE. 0 ) GOTO 100
          IZRM = MOD(ITYPRM,100)				          IZRM = MOD(ITYPRM,100)
          JC = JC + 1						          JC = JC + 1
          IF ( RD(IS)*IARM .LT. IZRM ) THEN			          IF ( RD(IS)*IARM .LT. IZRM ) THEN
            ITYP(JC) = 14					            ITYP(JC) = 14
            ITYPRM   = ITYPRM - 101				            ITYPRM   = ITYPRM - 101
          ELSE							          ELSE
            ITYP(JC) = 13					            ITYP(JC) = 13
            ITYPRM   = ITYPRM - 100				            ITYPRM   = ITYPRM - 100
          ENDIF							          ENDIF
 32     CONTINUE						 32     CONTINUE
      ENDIF							      ENDIF
 								 
 50   CONTINUE							 50   CONTINUE
      JC = JC + 1						      JC = JC + 1
      IF     ( ITYPRM .GT. 101 ) THEN				      IF     ( ITYPRM .GT. 101 ) THEN
        ITYP(JC) = ITYPRM					        ITYP(JC) = ITYPRM
      ELSEIF ( ITYPRM .EQ. 101 ) THEN				      ELSEIF ( ITYPRM .EQ. 101 ) THEN
        ITYP(JC) = 14						        ITYP(JC) = 14
      ELSEIF ( ITYPRM .EQ. 100 ) THEN				      ELSEIF ( ITYPRM .EQ. 100 ) THEN
        ITYP(JC) = 13						        ITYP(JC) = 13
      ELSE							      ELSE
        JC = JC - 1						        JC = JC - 1
        IF ( ITYPRM .NE. 0 ) WRITE(MONIOU,*)			        IF ( ITYPRM .NE. 0 ) WRITE(MONIOU,*)
     *                  'VAPOR : ILLEGAL PARTICLE ITYPRM =',I	     *                  'VAPOR : ILLEGAL PARTICLE ITYPRM =',I
      ENDIF							      ENDIF
 								 
 100  JFIN = JC							 100  JFIN = JC
      IF (DEBUG) WRITE(MDEBUG,*) 'VAPOR : NO   ITYP          	      IF (DEBUG) WRITE(MDEBUG,*) 'VAPOR : NO   ITYP          
      IF     ( NFRAGM .EQ. 2 ) THEN				      IF     ( NFRAGM .EQ. 2 ) THEN
C  EVAPORATION WITH PT AFTER PARAMETRIZED JACEE DATA		C  EVAPORATION WITH PT AFTER PARAMETRIZED JACEE DATA
        DO  150  MF = 1,JFIN					        DO  150  MF = 1,JFIN
          PFR(MF) = RANNOR(0.088D0,0.044D0)			          PFR(MF) = RANNOR(0.088D0,0.044D0)
          IF (DEBUG) WRITE(MDEBUG,*) MF,ITYP(MF),SNGL(PFR(MF)	          IF (DEBUG) WRITE(MDEBUG,*) MF,ITYP(MF),SNGL(PFR(MF)
 150    CONTINUE						 150    CONTINUE
      ELSEIF ( NFRAGM .EQ. 3 ) THEN				      ELSEIF ( NFRAGM .EQ. 3 ) THEN
C  EVAPORATION WITH PT AFTER GOLDHABER'S MODEL (PHYS.LETT.53B	C  EVAPORATION WITH PT AFTER GOLDHABER'S MODEL (PHYS.LETT.53B
        DO  160  MF = 1,JFIN					        DO  160  MF = 1,JFIN
          K = MAX( 1, ITYP(MF)/100 )				          K = MAX( 1, ITYP(MF)/100 )
          BGLH  = K * (MAPROJ - K) / FLOAT(MAPROJ-1)		          BGLH  = K * (MAPROJ - K) / FLOAT(MAPROJ-1)
C  THE VALUE 0.103 [GEV] IS SIGMA(0)=P(FERMI)/SQRT(5.)		C  THE VALUE 0.103 [GEV] IS SIGMA(0)=P(FERMI)/SQRT(5.)
*         AGLH = 0.103D0 * SQRT( BGLH )				*         AGLH = 0.103D0 * SQRT( BGLH )
C  THE VALUE 0.090 [GEV] IS EXPERIMENTALLY DETERMINED SIGMA(0	C  THE VALUE 0.090 [GEV] IS EXPERIMENTALLY DETERMINED SIGMA(0
          AGLH = 0.090D0 * SQRT( BGLH )				          AGLH = 0.090D0 * SQRT( BGLH )
          PFR(MF) = RANNOR(0.D0,AGLH)				          PFR(MF) = RANNOR(0.D0,AGLH)
          IF (DEBUG) WRITE(MDEBUG,*) MF,ITYP(MF),SNGL(PFR(MF)	          IF (DEBUG) WRITE(MDEBUG,*) MF,ITYP(MF),SNGL(PFR(MF)
 160    CONTINUE						 160    CONTINUE
      ELSE							      ELSE
C  EVAPORATION WITHOUT TRANSVERSE MOMENTUM			C  EVAPORATION WITHOUT TRANSVERSE MOMENTUM
        DO  165  MF = 1,JFIN					        DO  165  MF = 1,JFIN
          PFR(MF) = 0.D0					          PFR(MF) = 0.D0
          IF (DEBUG) WRITE(MDEBUG,*) MF,ITYP(MF),SNGL(PFR(MF)	          IF (DEBUG) WRITE(MDEBUG,*) MF,ITYP(MF),SNGL(PFR(MF)
 165    CONTINUE						 165    CONTINUE
      ENDIF							      ENDIF
C  CALCULATE RESIDUAL TRANSVERSE MOMENTUM			C  CALCULATE RESIDUAL TRANSVERSE MOMENTUM
      SPFRX = 0.D0						      SPFRX = 0.D0
      SPFRY = 0.D0						      SPFRY = 0.D0
      CALL RMMAR(RD,JFIN,1)					      CALL RMMAR(RD,JFIN,1)
      DO  170  MF = 1,JFIN					      DO  170  MF = 1,JFIN
        PHIFR = PI * RD(MF)					        PHIFR = PI * RD(MF)
        PFRX(MF) = PFR(MF) * COS(PHIFR)				        PFRX(MF) = PFR(MF) * COS(PHIFR)
        PFRY(MF) = PFR(MF) * SIN(PHIFR)				        PFRY(MF) = PFR(MF) * SIN(PHIFR)
        SPFRY = SPFRY + PFRY(MF)				        SPFRY = SPFRY + PFRY(MF)
        SPFRX = SPFRX + PFRX(MF)				        SPFRX = SPFRX + PFRX(MF)
 170  CONTINUE							 170  CONTINUE
C  CORRECT ALL TRANSVERSE MOMENTA FOR MOMENTUM CONSERVATION	C  CORRECT ALL TRANSVERSE MOMENTA FOR MOMENTUM CONSERVATION
      SPFRX = SPFRX / JFIN					      SPFRX = SPFRX / JFIN
      SPFRY = SPFRY / JFIN					      SPFRY = SPFRY / JFIN
      DO  180  MF = 1,JFIN					      DO  180  MF = 1,JFIN
        PFRX(MF) = PFRX(MF) - SPFRX				        PFRX(MF) = PFRX(MF) - SPFRX
        PFRY(MF) = PFRY(MF) - SPFRY				        PFRY(MF) = PFRY(MF) - SPFRY
 180  CONTINUE							 180  CONTINUE
 								 
      IF (DEBUG) WRITE(MDEBUG,*) 'VAPOR : NINTA,JFIN= ',NINTA	      IF (DEBUG) WRITE(MDEBUG,*) 'VAPOR : NINTA,JFIN= ',NINTA
      RETURN							      RETURN
      END							      END
