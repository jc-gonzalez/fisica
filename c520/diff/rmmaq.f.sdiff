      SUBROUTINE RMMAQ( ISEED,ISEQ,CHOPT )			      SUBROUTINE RMMAQ( ISEED,ISEQ,CHOPT )
 								 
C------------------------------------------------------------	C------------------------------------------------------------
C  R(ANDO)M (NUMBER GENERATOR OF) MA(RSAGLIA TYPE INITIALISAT	C  R(ANDO)M (NUMBER GENERATOR OF) MA(RSAGLIA TYPE INITIALISAT
C								C
C  ROUTINE FOR INITIALIZATION OF RMMAR				C  ROUTINE FOR INITIALIZATION OF RMMAR
C  THIS SUBROUTINE IS CALLED FROM MAIN AND START		C  THIS SUBROUTINE IS CALLED FROM MAIN AND START
C  ARGUMENTS:							C  ARGUMENTS:
C   ISEED  = SEED TO INITIALIZE A SEQUENCE			C   ISEED  = SEED TO INITIALIZE A SEQUENCE
C   ISEQ   = # OF RANDOM SEQUENCE				C   ISEQ   = # OF RANDOM SEQUENCE
C   CHOPT  = CHARACTER TO STEER INITIALIZATION OPTIONS		C   CHOPT  = CHARACTER TO STEER INITIALIZATION OPTIONS
C								C
C  CERN PROGLIB# V113    RMMAQ           .VERSION KERNFOR  1.	C  CERN PROGLIB# V113    RMMAQ           .VERSION KERNFOR  1.
C  ORIG. 01/03/89 FCA + FJ					C  ORIG. 01/03/89 FCA + FJ
C------------------------------------------------------------	C------------------------------------------------------------
 								 
      COMMON /RANMA2/ IU(1030),JSEQ				      COMMON /RANMA2/ IU(1030),JSEQ
      COMMON /RANMA3/ TWOM24,TWOM48,CD,CM,CINT,MODCNS		      COMMON /RANMA3/ TWOM24,TWOM48,CD,CM,CINT,MODCNS
      INTEGER I97(0:1030),J97(0:1030),NTOT(0:1030),NTOT2(0:10	      INTEGER I97(0:1030),J97(0:1030),NTOT(0:1030),NTOT2(0:10
     *        IJKL(0:1030)					     *        IJKL(0:1030)
      REAL    U(1030),C(0:1030),UU(1030)			      REAL    U(1030),C(0:1030),UU(1030)
      EQUIVALENCE (IJKL(0),IU(1)),(NTOT(0),IU(2)),(NTOT2(0),I	      EQUIVALENCE (IJKL(0),IU(1)),(NTOT(0),IU(2)),(NTOT2(0),I
      EQUIVALENCE (U(1),IU(4)),(C(0),IU(101)),(I97(0),IU(102)	      EQUIVALENCE (U(1),IU(4)),(C(0),IU(101)),(I97(0),IU(102)
      EQUIVALENCE (J97(0),IU(103))				      EQUIVALENCE (J97(0),IU(103))
      INTEGER     ISEED(*)					      INTEGER     ISEED(*)
      CHARACTER   CHOPT*(*), CCHOPT*12				      CHARACTER   CHOPT*(*), CCHOPT*12
      LOGICAL FIRST						      LOGICAL FIRST
      DATA    FIRST / .TRUE. /					      DATA    FIRST / .TRUE. /
C------------------------------------------------------------	C------------------------------------------------------------
 								 
      IF ( FIRST ) THEN						      IF ( FIRST ) THEN
        TWOM24 = 2.**(-24)					        TWOM24 = 2.**(-24)
        TWOM48 = 2.**(-48)					        TWOM48 = 2.**(-48)
        CD     = 7654321.*TWOM24				        CD     = 7654321.*TWOM24
        CM     = 16777213.*TWOM24				        CM     = 16777213.*TWOM24
        CINT   = 362436.*TWOM24					        CINT   = 362436.*TWOM24
        MODCNS = 1000000000					        MODCNS = 1000000000
        FIRST  = .FALSE.					        FIRST  = .FALSE.
      ENDIF							      ENDIF
 								 
      CCHOPT = CHOPT						      CCHOPT = CHOPT
      IF ( CCHOPT .EQ. ' ' ) THEN				      IF ( CCHOPT .EQ. ' ' ) THEN
        ISEED(1) = 54217137					        ISEED(1) = 54217137
        ISEED(2) = 0						        ISEED(2) = 0
        ISEED(3) = 0						        ISEED(3) = 0
        CCHOPT   = 'S'						        CCHOPT   = 'S'
        JSEQ     = 1						        JSEQ     = 1
      ENDIF							      ENDIF
 								 
      IF     ( INDEX(CCHOPT,'S') .NE. 0 ) THEN			      IF     ( INDEX(CCHOPT,'S') .NE. 0 ) THEN
        IF ( ISEQ .GT. 0 ) JSEQ = ISEQ				        IF ( ISEQ .GT. 0 ) JSEQ = ISEQ
        IBASE = (JSEQ-1)*103					        IBASE = (JSEQ-1)*103
        IF ( INDEX(CCHOPT,'V') .NE. 0 ) THEN			        IF ( INDEX(CCHOPT,'V') .NE. 0 ) THEN
          DO 10  JJ = 1,103					          DO 10  JJ = 1,103
            IU(IBASE+JJ) = ISEED(JJ)				            IU(IBASE+JJ) = ISEED(JJ)
  10      CONTINUE						  10      CONTINUE
        ELSE							        ELSE
          IJKL(IBASE)  = ISEED(1)				          IJKL(IBASE)  = ISEED(1)
          NTOT(IBASE)  = ISEED(2)				          NTOT(IBASE)  = ISEED(2)
          NTOT2(IBASE) = ISEED(3)				          NTOT2(IBASE) = ISEED(3)
          IJ = IJKL(IBASE) / 30082				          IJ = IJKL(IBASE) / 30082
          KL = IJKL(IBASE) - 30082*IJ				          KL = IJKL(IBASE) - 30082*IJ
          I  = MOD(IJ/177, 177) + 2				          I  = MOD(IJ/177, 177) + 2
          J  = MOD(IJ, 177)     + 2				          J  = MOD(IJ, 177)     + 2
          K  = MOD(KL/169, 178) + 1				          K  = MOD(KL/169, 178) + 1
          L  = MOD(KL, 169)					          L  = MOD(KL, 169)
          DO 30  II = 1,97					          DO 30  II = 1,97
            S = 0.						            S = 0.
            T = .5						            T = .5
            DO 20  JJ = 1,24					            DO 20  JJ = 1,24
              M = MOD(MOD(I*J,179)*K, 179)			              M = MOD(MOD(I*J,179)*K, 179)
              I = J						              I = J
              J = K						              J = K
              K = M						              K = M
              L = MOD(53*L+1, 169)				              L = MOD(53*L+1, 169)
              IF ( MOD(L*M,64) .GE. 32 ) S = S+T		              IF ( MOD(L*M,64) .GE. 32 ) S = S+T
              T = 0.5*T						              T = 0.5*T
  20        CONTINUE						  20        CONTINUE
            UU(II) = S						            UU(II) = S
  30      CONTINUE						  30      CONTINUE
          CC   = CINT						          CC   = CINT
          II97 = 97						          II97 = 97
          IJ97 = 33						          IJ97 = 33
C  COMPLETE INITIALIZATION BY SKIPPING (NTOT2*MODCNS+NTOT) RA	C  COMPLETE INITIALIZATION BY SKIPPING (NTOT2*MODCNS+NTOT) RA
          NITER = MODCNS					          NITER = MODCNS
          DO 50  LOOP2 = 1,NTOT2(IBASE)+1			          DO 50  LOOP2 = 1,NTOT2(IBASE)+1
            IF ( LOOP2 .GT.N TOT2(IBASE) ) NITER = NTOT(IBASE	            IF ( LOOP2 .GT.N TOT2(IBASE) ) NITER = NTOT(IBASE
            DO 40  IDUM = 1,NITER				            DO 40  IDUM = 1,NITER
              UNI = UU(II97)-UU(IJ97)				              UNI = UU(II97)-UU(IJ97)
              IF ( UNI .LT. 0. ) UNI = UNI+1.			              IF ( UNI .LT. 0. ) UNI = UNI+1.
              UU(II97) = UNI					              UU(II97) = UNI
              II97 = II97-1					              II97 = II97-1
              IF ( II97 .EQ. 0 ) II97 = 97			              IF ( II97 .EQ. 0 ) II97 = 97
              IJ97 = IJ97-1					              IJ97 = IJ97-1
              IF ( IJ97 .EQ. 0 ) IJ97 = 97			              IF ( IJ97 .EQ. 0 ) IJ97 = 97
              CC = CC - CD					              CC = CC - CD
              IF ( CC .LT. 0. ) CC = CC+CM			              IF ( CC .LT. 0. ) CC = CC+CM
   40       CONTINUE						   40       CONTINUE
   50     CONTINUE						   50     CONTINUE
          I97(IBASE) = II97					          I97(IBASE) = II97
          J97(IBASE) = IJ97					          J97(IBASE) = IJ97
          C(IBASE)   = CC					          C(IBASE)   = CC
          DO 60  JJ = 1,97					          DO 60  JJ = 1,97
            U(IBASE+JJ) = UU(JJ)				            U(IBASE+JJ) = UU(JJ)
  60      CONTINUE						  60      CONTINUE
        ENDIF							        ENDIF
      ELSEIF ( INDEX(CCHOPT,'R') .NE. 0 ) THEN			      ELSEIF ( INDEX(CCHOPT,'R') .NE. 0 ) THEN
        IF ( ISEQ .GT. 0 ) THEN					        IF ( ISEQ .GT. 0 ) THEN
          JSEQ = ISEQ						          JSEQ = ISEQ
        ELSE							        ELSE
          ISEQ = JSEQ						          ISEQ = JSEQ
        ENDIF							        ENDIF
        IBASE = (JSEQ-1)*103					        IBASE = (JSEQ-1)*103
        IF ( INDEX(CCHOPT,'V') .NE. 0 ) THEN			        IF ( INDEX(CCHOPT,'V') .NE. 0 ) THEN
          NCOPY = 103						          NCOPY = 103
        ELSE							        ELSE
          NCOPY = 3						          NCOPY = 3
        ENDIF							        ENDIF
        DO 70  JJ = 1,NCOPY					        DO 70  JJ = 1,NCOPY
          ISEED(JJ) = IU(IBASE+JJ)				          ISEED(JJ) = IU(IBASE+JJ)
  70    CONTINUE						  70    CONTINUE
      ENDIF							      ENDIF
      RETURN							      RETURN
      END							      END
