      SUBROUTINE PIGEN2						      SUBROUTINE PIGEN2
C								C
C************************************************************	C************************************************************
C  DESIGN  : D. HECK   IK3  FZK KARLSRUHE			C  DESIGN  : D. HECK   IK3  FZK KARLSRUHE
C  DATE    : JUL  31, 1989					C  DATE    : JUL  31, 1989
C************************************************************	C************************************************************
C  THIS SUBROUTINE DESCRIBES THE PHOTONUCLEAR REACTION		C  THIS SUBROUTINE DESCRIBES THE PHOTONUCLEAR REACTION
C    GAMMA + NUCLEON  -----> PION + PION + NUCLEON		C    GAMMA + NUCLEON  -----> PION + PION + NUCLEON
C************************************************************	C************************************************************
      DOUBLE PRECISION BETA,DUMMY,ECM,ENUCL,GAMMA,PEIG,PTRANS	      DOUBLE PRECISION BETA,DUMMY,ECM,ENUCL,GAMMA,PEIG,PTRANS
*KEEP,ELABCT.							*KEEP,ELABCT.
      COMMON /ELABCT/  ELCUT					      COMMON /ELABCT/  ELCUT
      DOUBLE PRECISION ELCUT(4)					      DOUBLE PRECISION ELCUT(4)
*KEEP,PAM.							*KEEP,PAM.
      COMMON /PAM/     PAMA,SIGNUM				      COMMON /PAM/     PAMA,SIGNUM
      DOUBLE PRECISION PAMA(6000),SIGNUM(6000)			      DOUBLE PRECISION PAMA(6000),SIGNUM(6000)
*KEEP,PARPAR.							*KEEP,PARPAR.
      COMMON /PARPAR/  CURPAR,SECPAR,PRMPAR,OUTPAR,C,		      COMMON /PARPAR/  CURPAR,SECPAR,PRMPAR,OUTPAR,C,
     *                 E00,E00PN,PTOT0,PTOT0N,THICKH,ITYPE,LE	     *                 E00,E00PN,PTOT0,PTOT0N,THICKH,ITYPE,LE
      DOUBLE PRECISION CURPAR(14),SECPAR(14),PRMPAR(14),OUTPA	      DOUBLE PRECISION CURPAR(14),SECPAR(14),PRMPAR(14),OUTPA
     *                 C(50),E00,E00PN,PTOT0,PTOT0N,THICKH	     *                 C(50),E00,E00PN,PTOT0,PTOT0N,THICKH
      INTEGER          ITYPE,LEVL				      INTEGER          ITYPE,LEVL
*KEND.								*KEND.
      DOUBLE PRECISION PI0MSQ					      DOUBLE PRECISION PI0MSQ
      COMMON/PION/PI0MSQ,PITHR,PICMAS,PI0MAS,AMASK0,AMASKC,AM	      COMMON/PION/PI0MSQ,PITHR,PICMAS,PI0MAS,AMASK0,AMASKC,AM
     *								     *
*KEEP,RANDPA.							*KEEP,RANDPA.
      COMMON /RANDPA/  FAC,U1,U2,RD,NSEQ,ISEED,KNOR		      COMMON /RANDPA/  FAC,U1,U2,RD,NSEQ,ISEED,KNOR
      DOUBLE PRECISION FAC,U1,U2				      DOUBLE PRECISION FAC,U1,U2
      REAL             RD(3000)					      REAL             RD(3000)
      INTEGER          ISEED(103,10),NSEQ			      INTEGER          ISEED(103,10),NSEQ
      LOGICAL          KNOR					      LOGICAL          KNOR
*KEEP,RUNPAR.							*KEEP,RUNPAR.
      COMMON /RUNPAR/  FIXHEI,THICK0,HILOECM,HILOELB,		      COMMON /RUNPAR/  FIXHEI,THICK0,HILOECM,HILOELB,
     *                 STEPFC,NRRUN,NSHOW,PATAPE,MONIIN,	     *                 STEPFC,NRRUN,NSHOW,PATAPE,MONIIN,
     *                 MONIOU,MDEBUG,NUCNUC,			     *                 MONIOU,MDEBUG,NUCNUC,
     *                 CETAPE,					     *                 CETAPE,
     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,	     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,
     *                 N1STTR,MDBASE,				     *                 N1STTR,MDBASE,
     *                 DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC	     *                 DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC
     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE		     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE
     *                ,GHEISH,GHESIG				     *                ,GHEISH,GHESIG
      COMMON /RUNPAC/  DSN,HOST,USER				      COMMON /RUNPAC/  DSN,HOST,USER
      DOUBLE PRECISION FIXHEI,THICK0,HILOECM,HILOELB		      DOUBLE PRECISION FIXHEI,THICK0,HILOECM,HILOELB
      REAL             STEPFC					      REAL             STEPFC
      INTEGER          NRRUN,NSHOW,PATAPE,MONIIN,MONIOU,MDEBU	      INTEGER          NRRUN,NSHOW,PATAPE,MONIIN,MONIOU,MDEBU
     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,	     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,
     *                 N1STTR,MDBASE				     *                 N1STTR,MDBASE
      INTEGER          CETAPE					      INTEGER          CETAPE
      CHARACTER*79     DSN					      CHARACTER*79     DSN
      CHARACTER*20     HOST,USER				      CHARACTER*20     HOST,USER
 								 
      LOGICAL          DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC	      LOGICAL          DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC
     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE		     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE
     *                ,GHEISH,GHESIG				     *                ,GHEISH,GHESIG
*KEEP,STACKE.							*KEEP,STACKE.
      COMMON/STACKE/   E,TIME,X,Y,Z,U,V,W,DNEAR,IQ,IGEN,IR,IO	      COMMON/STACKE/   E,TIME,X,Y,Z,U,V,W,DNEAR,IQ,IGEN,IR,IO
      DOUBLE PRECISION E(60),TIME(60)				      DOUBLE PRECISION E(60),TIME(60)
      REAL             X(60),Y(60),Z(60),U(60),V(60),W(60),DN	      REAL             X(60),Y(60),Z(60),U(60),V(60),W(60),DN
      INTEGER          IQ(60),IGEN(60),IR(60),IOBS(60),LPCTE(	      INTEGER          IQ(60),IGEN(60),IR(60),IOBS(60),LPCTE(
*KEND.								*KEND.
      COMMON/UPHIIN/SINC0,SINC1,SIN0(20002),SIN1(20002)		      COMMON/UPHIIN/SINC0,SINC1,SIN0(20002),SIN1(20002)
      COMMON/UPHIOT/THETA,SINTHE,COSTHE,SINPHI, COSPHI,PI,TWO	      COMMON/UPHIOT/THETA,SINTHE,COSTHE,SINPHI, COSPHI,PI,TWO
      COMMON/ACLOCK/NCLOCK,JCLOCK				      COMMON/ACLOCK/NCLOCK,JCLOCK
C_____IF (NCLOCK.GT.JCLOCK) THEN				C_____IF (NCLOCK.GT.JCLOCK) THEN
C______WRITE(MDEBUG,* )' PIGEN2:NP=',NP,' IR=',IR(NP),' IOBS=	C______WRITE(MDEBUG,* )' PIGEN2:NP=',NP,' IR=',IR(NP),' IOBS=
C______CALL AUSGB2						C______CALL AUSGB2
C_____END IF							C_____END IF
      IF(DEBUG)WRITE(MDEBUG,*)'PIGEN2: E=',E(NP)		      IF(DEBUG)WRITE(MDEBUG,*)'PIGEN2: E=',E(NP)
      PEIG=E(NP)						      PEIG=E(NP)
C***  NUMBERS AT THE VARIABLES MEAN :				C***  NUMBERS AT THE VARIABLES MEAN :
C***  1  INCOMING GAMMA RAY					C***  1  INCOMING GAMMA RAY
C***  2  HIT NUCLEON						C***  2  HIT NUCLEON
C***  3  FIRST  PRODUCED PION					C***  3  FIRST  PRODUCED PION
C***  4  SECOND PRODUCED PION					C***  4  SECOND PRODUCED PION
C***  5  RECOILING NUCLEON					C***  5  RECOILING NUCLEON
      CALL RMMAR(RD,2,2)					      CALL RMMAR(RD,2,2)
      RNNO81=RD(1)						      RNNO81=RD(1)
      RNNO82=RD(2)						      RNNO82=RD(2)
C***  LOOK WHICH TYPE OF REACTION				C***  LOOK WHICH TYPE OF REACTION
C***  0.49923 IS THE FRACTION OF PROTONS IN AIR			C***  0.49923 IS THE FRACTION OF PROTONS IN AIR
      IF (RNNO81.LE.0.49923) THEN				      IF (RNNO81.LE.0.49923) THEN
C ***  HIT NUCLEON IS PROTON					C ***  HIT NUCLEON IS PROTON
       AMASS2=AMASPR						       AMASS2=AMASPR
C ***  BRANCHING FOR COLLISION WITH PROTON			C ***  BRANCHING FOR COLLISION WITH PROTON
       IF (RNNO82.LE.0.3) THEN					       IF (RNNO82.LE.0.3) THEN
C  ***  PI(0) + PI(0) + PROTON					C  ***  PI(0) + PI(0) + PROTON
        IQ(NP)= 7						        IQ(NP)= 7
        IQ(NP+1)= 7						        IQ(NP+1)= 7
        IQ(NP+2)= 14						        IQ(NP+2)= 14
       ELSE IF(RNNO82.LE.0.6) THEN				       ELSE IF(RNNO82.LE.0.6) THEN
C  ***  PI(+) + PI(-) + PROTON					C  ***  PI(+) + PI(-) + PROTON
        IQ(NP)= 8						        IQ(NP)= 8
        IQ(NP+1)= 9						        IQ(NP+1)= 9
        IQ(NP+2)= 14						        IQ(NP+2)= 14
       ELSE							       ELSE
C  ***   PI(+) + PI(0) + NEUTRON				C  ***   PI(+) + PI(0) + NEUTRON
        IQ(NP)= 8						        IQ(NP)= 8
        IQ(NP+1)= 7						        IQ(NP+1)= 7
        IQ(NP+2)= 13						        IQ(NP+2)= 13
       END IF							       END IF
      ELSE							      ELSE
C ***  HIT NUCLEON IS NEUTRON					C ***  HIT NUCLEON IS NEUTRON
C ***  BRANCHING FOR COLLISION WITH NEUTRON			C ***  BRANCHING FOR COLLISION WITH NEUTRON
       AMASS2=AMASNT						       AMASS2=AMASNT
       IF (RNNO82.LE.0.3) THEN					       IF (RNNO82.LE.0.3) THEN
C  ***  PI(0) + PI(0) + NEUTRON					C  ***  PI(0) + PI(0) + NEUTRON
        IQ(NP)= 7						        IQ(NP)= 7
        IQ(NP+1)= 7						        IQ(NP+1)= 7
        IQ(NP+2)= 13						        IQ(NP+2)= 13
       ELSE IF(RNNO82.LE.0.6) THEN				       ELSE IF(RNNO82.LE.0.6) THEN
C  ***  PI(+) + PI(-) + NEUTRON					C  ***  PI(+) + PI(-) + NEUTRON
        IQ(NP)= 8						        IQ(NP)= 8
        IQ(NP+1)= 9						        IQ(NP+1)= 9
        IQ(NP+2)= 13						        IQ(NP+2)= 13
       ELSE							       ELSE
C  ***  PI(-) + PI(0) + PROTON					C  ***  PI(-) + PI(0) + PROTON
        IQ(NP)= 9						        IQ(NP)= 9
        IQ(NP+1)= 7						        IQ(NP+1)= 7
        IQ(NP+2)= 14						        IQ(NP+2)= 14
       END IF							       END IF
      END IF							      END IF
C***  CALCULATE AUXILIARY PARAMETERS				C***  CALCULATE AUXILIARY PARAMETERS
      ECM=SQRT(AMASS2*(AMASS2+2.D0*PEIG))			      ECM=SQRT(AMASS2*(AMASS2+2.D0*PEIG))
C***  NOTE: THE ENERGIES IN EGS ARE IN MEV, IN CORSIKA IN GEV	C***  NOTE: THE ENERGIES IN EGS ARE IN MEV, IN CORSIKA IN GEV
      AMASS3=PAMA(IQ(NP))*1.D3					      AMASS3=PAMA(IQ(NP))*1.D3
      AMASS4=PAMA(IQ(NP+1))*1.D3				      AMASS4=PAMA(IQ(NP+1))*1.D3
      AMASS5=PAMA(IQ(NP+2))*1.D3				      AMASS5=PAMA(IQ(NP+2))*1.D3
      AUX1=(AMASS3+AMASS4)**2					      AUX1=(AMASS3+AMASS4)**2
      AUX2A=(ECM - AMASS5)**2					      AUX2A=(ECM - AMASS5)**2
      AUX2=AUX2A-AUX1						      AUX2=AUX2A-AUX1
      AUX3=(AMASS3+AMASS5)**2					      AUX3=(AMASS3+AMASS5)**2
      AUX4A=(ECM - AMASS4)**2					      AUX4A=(ECM - AMASS4)**2
      AUX4=AUX4A-AUX3						      AUX4=AUX4A-AUX3
      AUX5=AMASS3**2-AMASS4**2					      AUX5=AMASS3**2-AMASS4**2
      AUX6=ECM**2-AMASS5**2					      AUX6=ECM**2-AMASS5**2
      AUX7=0.5/ECM						      AUX7=0.5/ECM
      AUX8=(ECM - AMASS3)**2					      AUX8=(ECM - AMASS3)**2
      BETA=PEIG/(AMASS2+PEIG)					      BETA=PEIG/(AMASS2+PEIG)
      GAMMA=2.*(PEIG+AMASS2)*AUX7				      GAMMA=2.*(PEIG+AMASS2)*AUX7
230   CONTINUE							230   CONTINUE
      CALL RMMAR(RD,2,2)					      CALL RMMAR(RD,2,2)
      RNNO84=RD(1)						      RNNO84=RD(1)
      RNNO85=RD(2)						      RNNO85=RD(2)
C***  ARE INVARIANT MASS SQUARES INSIDE BOUNDARY OF DALITZ PL	C***  ARE INVARIANT MASS SQUARES INSIDE BOUNDARY OF DALITZ PL
      AM34SQ=AUX2*RNNO84+AUX1					      AM34SQ=AUX2*RNNO84+AUX1
      AM35SQ=AUX4*RNNO85+AUX3					      AM35SQ=AUX4*RNNO85+AUX3
      AM34I=0.5/SQRT(AM34SQ)					      AM34I=0.5/SQRT(AM34SQ)
      E3STAR=(AUX5+AM34SQ)*AM34I				      E3STAR=(AUX5+AM34SQ)*AM34I
      E5STAR=(AUX6-AM34SQ)*AM34I				      E5STAR=(AUX6-AM34SQ)*AM34I
      ROOT1=SQRT(E3STAR**2-AMASS3**2)				      ROOT1=SQRT(E3STAR**2-AMASS3**2)
      ROOT2=SQRT(E5STAR**2-AMASS5**2)				      ROOT2=SQRT(E5STAR**2-AMASS5**2)
C***  REJECT RANDOM NUMBERS, IF NOT INSIDE KINEMATIC BOUNDARY	C***  REJECT RANDOM NUMBERS, IF NOT INSIDE KINEMATIC BOUNDARY
      DISCR=AM35SQ-(E3STAR+E5STAR)**2				      DISCR=AM35SQ-(E3STAR+E5STAR)**2
      IF((DISCR.GT.-(ROOT1-ROOT2)**2))GOTO 230			      IF((DISCR.GT.-(ROOT1-ROOT2)**2))GOTO 230
      IF((DISCR.LT.-(ROOT1+ROOT2)**2))GOTO 230			      IF((DISCR.LT.-(ROOT1+ROOT2)**2))GOTO 230
C***  E3CM,E4CM,E5CM ARE ENERGIES IN C.M. SYSTEM		C***  E3CM,E4CM,E5CM ARE ENERGIES IN C.M. SYSTEM
      E4CM=(ECM**2+AMASS4**2-AM35SQ)*AUX7			      E4CM=(ECM**2+AMASS4**2-AM35SQ)*AUX7
      E5CM=(ECM**2+AMASS5**2-AM34SQ)*AUX7			      E5CM=(ECM**2+AMASS5**2-AM34SQ)*AUX7
C***  NOW TAKE PION WITH HIGHEST ENERGY AS PARTICLE 3		C***  NOW TAKE PION WITH HIGHEST ENERGY AS PARTICLE 3
      E3CM=ECM-E4CM-E5CM					      E3CM=ECM-E4CM-E5CM
      IF (E4CM.GT.E3CM) THEN					      IF (E4CM.GT.E3CM) THEN
C ***  INTERCHANGE PARTICLE 3 AND 4				C ***  INTERCHANGE PARTICLE 3 AND 4
       HELP=E3CM						       HELP=E3CM
       E3CM=E4CM						       E3CM=E4CM
       E4CM=HELP						       E4CM=HELP
       HELP=AMASS3						       HELP=AMASS3
       AMASS3=AMASS4						       AMASS3=AMASS4
       AMASS4=HELP						       AMASS4=HELP
       IHELP=IQ(NP)						       IHELP=IQ(NP)
       IQ(NP)=IQ(NP+1)						       IQ(NP)=IQ(NP+1)
       IQ(NP+1)=IHELP						       IQ(NP+1)=IHELP
      END IF							      END IF
C***  P3CM,P4CM,P5CM ARE MOMENTA IN C.M. SYSTEM			C***  P3CM,P4CM,P5CM ARE MOMENTA IN C.M. SYSTEM
C***  P3SQ,P4SQ,P5SQ ARE SQUARED MOMENTA IN C.M. SYSTEM		C***  P3SQ,P4SQ,P5SQ ARE SQUARED MOMENTA IN C.M. SYSTEM
      P3SQ=E3CM**2-AMASS3**2					      P3SQ=E3CM**2-AMASS3**2
      P3CM=SQRT(MAX(0.,P3SQ))					      P3CM=SQRT(MAX(0.,P3SQ))
      P4SQ=E4CM**2-AMASS4**2					      P4SQ=E4CM**2-AMASS4**2
      P4CM=SQRT(MAX(0.,P4SQ))					      P4CM=SQRT(MAX(0.,P4SQ))
      P5SQ=E5CM**2-AMASS5**2					      P5SQ=E5CM**2-AMASS5**2
      P5CM=SQRT(MAX(0.,P5SQ))					      P5CM=SQRT(MAX(0.,P5SQ))
      COSA=(P5SQ-P3SQ-P4SQ)/(2.*P3CM*P4CM)			      COSA=(P5SQ-P3SQ-P4SQ)/(2.*P3CM*P4CM)
      SINA=-SQRT(MAX(0.,1.-COSA**2))				      SINA=-SQRT(MAX(0.,1.-COSA**2))
      COSB=(P4SQ-P3SQ-P5SQ)/(2.*P3CM*P5CM)			      COSB=(P4SQ-P3SQ-P5SQ)/(2.*P3CM*P5CM)
      SINB= SQRT(MAX(0.,1.-COSB**2))				      SINB= SQRT(MAX(0.,1.-COSB**2))
C***  NOW SELECT THE THREE INDEPENDENT ANGLES IN C.M. SYSTEM	C***  NOW SELECT THE THREE INDEPENDENT ANGLES IN C.M. SYSTEM
      PT3=1.D3*PTRANS(DUMMY)					      PT3=1.D3*PTRANS(DUMMY)
      SIN3CM=MIN(1.,PT3/P3CM)					      SIN3CM=MIN(1.,PT3/P3CM)
      COS3CM=SQRT(1.-SIN3CM**2)					      COS3CM=SQRT(1.-SIN3CM**2)
      CALL RMMAR(RNNO86,1,2)					      CALL RMMAR(RNNO86,1,2)
      PSI=TWOPI*RNNO86						      PSI=TWOPI*RNNO86
      LPSI=SINC1*PSI+SINC0					      LPSI=SINC1*PSI+SINC0
      SINPSI=SIN1(LPSI)*PSI+SIN0(LPSI)				      SINPSI=SIN1(LPSI)*PSI+SIN0(LPSI)
      CPSI=PI5D2-PSI						      CPSI=PI5D2-PSI
      LCPSI=SINC1*CPSI+SINC0					      LCPSI=SINC1*CPSI+SINC0
      COSPSI=SIN1(LCPSI)*CPSI+SIN0(LCPSI)			      COSPSI=SIN1(LCPSI)*CPSI+SIN0(LCPSI)
C***  THIRD INDEPENDENT ANGLE PHI IS CHOOSEN LATER IN SUBROUT	C***  THIRD INDEPENDENT ANGLE PHI IS CHOOSEN LATER IN SUBROUT
C***  NOW MAKE LORENTZ-TRANSFORMATION FOR PARTICLE 3 (PION)	C***  NOW MAKE LORENTZ-TRANSFORMATION FOR PARTICLE 3 (PION)
      E(NP)=GAMMA*(E3CM+BETA*P3CM*COS3CM)			      E(NP)=GAMMA*(E3CM+BETA*P3CM*COS3CM)
C***  COSTHE AND SINTHE ARE ANGLES IN LAB SYSTEM FOR PARTICLE	C***  COSTHE AND SINTHE ARE ANGLES IN LAB SYSTEM FOR PARTICLE
      COSTHE= MIN((BETA*E3CM+P3CM*COS3CM)*GAMMA/ SQRT(MAX(0.D	      COSTHE= MIN((BETA*E3CM+P3CM*COS3CM)*GAMMA/ SQRT(MAX(0.D
     *-AMASS3**2)),1.D0)					     *-AMASS3**2)),1.D0)
      SINTHE=SQRT(MAX(0.0,1.-COSTHE**2))			      SINTHE=SQRT(MAX(0.0,1.-COSTHE**2))
C***  SINPHI AND COSPHI ARE NOW SET IN SUBROUTINE UPHI		C***  SINPHI AND COSPHI ARE NOW SET IN SUBROUTINE UPHI
      CALL UPHI(2,1)						      CALL UPHI(2,1)
      SINFI3=SINPHI						      SINFI3=SINPHI
      COSFI3=COSPHI						      COSFI3=COSPHI
C***  NOW MAKE LORENTZ-TRANSFORMATION FOR PARTICLE 4 = PION	C***  NOW MAKE LORENTZ-TRANSFORMATION FOR PARTICLE 4 = PION
      COS4CM=COS3CM*COSA-SIN3CM*COSPSI*SINA			      COS4CM=COS3CM*COSA-SIN3CM*COSPSI*SINA
      NP=NP+1							      NP=NP+1
      E(NP)=GAMMA*(E4CM+BETA*P4CM*COS4CM)			      E(NP)=GAMMA*(E4CM+BETA*P4CM*COS4CM)
      SINT4=SQRT(MAX(0.,1.-COS4CM**2))				      SINT4=SQRT(MAX(0.,1.-COS4CM**2))
      IF (SINT4.NE.0.) THEN					      IF (SINT4.NE.0.) THEN
       SINT4I =1./SINT4						       SINT4I =1./SINT4
       AUXA=COS3CM*COSPSI*SINA+SIN3CM*COSA			       AUXA=COS3CM*COSPSI*SINA+SIN3CM*COSA
C ***  COSPHI AND SINPHI ARE IN LAB SYSTEM FOR PARTICLE 4 (PI	C ***  COSPHI AND SINPHI ARE IN LAB SYSTEM FOR PARTICLE 4 (PI
       COSPHI=(COSFI3*AUXA-SINFI3*SINPSI*SINA)*SINT4I		       COSPHI=(COSFI3*AUXA-SINFI3*SINPSI*SINA)*SINT4I
       SINPHI=(SINFI3*AUXA+COSFI3*SINPSI*SINA)*SINT4I		       SINPHI=(SINFI3*AUXA+COSFI3*SINPSI*SINA)*SINT4I
      ELSE							      ELSE
       COSPHI=0.						       COSPHI=0.
       SINPHI=1.						       SINPHI=1.
      END IF							      END IF
C***  COSTHE AND SINTHE ARE IN LAB SYSTEM FOR PARTICLE 4 (PIO	C***  COSTHE AND SINTHE ARE IN LAB SYSTEM FOR PARTICLE 4 (PIO
      COSTHE= MIN((BETA*E4CM+P4CM*COS4CM)*GAMMA/ SQRT(MAX(0.D	      COSTHE= MIN((BETA*E4CM+P4CM*COS4CM)*GAMMA/ SQRT(MAX(0.D
     *-AMASS4**2)),1.D0)					     *-AMASS4**2)),1.D0)
      SINTHE=SQRT(MAX(0.0,1.-COSTHE**2))			      SINTHE=SQRT(MAX(0.0,1.-COSTHE**2))
      CALL UPHI(3,2)						      CALL UPHI(3,2)
C***  NOW MAKE LORENTZ-TRANSFORMATION FOR PARTICLE 5 = RECOIL	C***  NOW MAKE LORENTZ-TRANSFORMATION FOR PARTICLE 5 = RECOIL
      COS5CM=COS3CM*COSB-SIN3CM*COSPSI*SINB			      COS5CM=COS3CM*COSB-SIN3CM*COSPSI*SINB
      ENUCL=GAMMA*(E5CM+BETA*P5CM*COS5CM)			      ENUCL=GAMMA*(E5CM+BETA*P5CM*COS5CM)
      IF ((ENUCL-AMASS5).GT.ELCUT(1)*1000.D0) THEN		      IF ((ENUCL-AMASS5).GT.ELCUT(1)*1000.D0) THEN
C ***  RECOIL NUCLEON IS ABOVE THRESHOLD AND MUST BE TREATED	C ***  RECOIL NUCLEON IS ABOVE THRESHOLD AND MUST BE TREATED
       NP=NP+1							       NP=NP+1
       E(NP)=ENUCL						       E(NP)=ENUCL
       SINT5=SQRT(MAX(0.,1.-COS5CM**2))				       SINT5=SQRT(MAX(0.,1.-COS5CM**2))
       IF (SINT5.NE.0.) THEN					       IF (SINT5.NE.0.) THEN
        SINT5I =1./SINT5					        SINT5I =1./SINT5
        AUXB=COS3CM*COSPSI*SINB+SIN3CM*COSB			        AUXB=COS3CM*COSPSI*SINB+SIN3CM*COSB
C  ***  COSPHI AND SINPHI ARE IN LAB SYSTEM FOR PART. 5 (NUCL	C  ***  COSPHI AND SINPHI ARE IN LAB SYSTEM FOR PART. 5 (NUCL
        COSPHI=(COSFI3*AUXB-SINFI3*SINPSI*SINB)*SINT5I		        COSPHI=(COSFI3*AUXB-SINFI3*SINPSI*SINB)*SINT5I
        SINPHI=(SINFI3*AUXB+COSFI3*SINPSI*SINB)*SINT5I		        SINPHI=(SINFI3*AUXB+COSFI3*SINPSI*SINB)*SINT5I
       ELSE							       ELSE
        COSPHI=0.						        COSPHI=0.
        SINPHI=1.						        SINPHI=1.
       END IF							       END IF
C ***  COSTHE AND SINTHE ARE IN LAB SYSTEM FOR PARTICLE 5 (NU	C ***  COSTHE AND SINTHE ARE IN LAB SYSTEM FOR PARTICLE 5 (NU
       COSTHE=MIN((BETA*E5CM+P5CM*COS5CM)*GAMMA/SQRT(ENUCL**2	       COSTHE=MIN((BETA*E5CM+P5CM*COS5CM)*GAMMA/SQRT(ENUCL**2
     * , 1.D0)							     * , 1.D0)
       SINTHE=SQRT(MAX(0.0,1.-COSTHE**2))			       SINTHE=SQRT(MAX(0.0,1.-COSTHE**2))
       CALL UPHI(3,2)						       CALL UPHI(3,2)
       IF (W(NP).GT.C(29)) THEN					       IF (W(NP).GT.C(29)) THEN
C  *** ANGLE WITH RESPECT TO X AXIS				C  *** ANGLE WITH RESPECT TO X AXIS
        IF (U(NP)**2+V(NP)**2.GT.3.E-38) THEN			        IF (U(NP)**2+V(NP)**2.GT.3.E-38) THEN
         ANGLEX = -ATAN2(V(NP),U(NP))				         ANGLEX = -ATAN2(V(NP),U(NP))
        ELSE							        ELSE
         ANGLEX = 0.						         ANGLEX = 0.
        END IF							        END IF
C  ***  ADD NUCLEON TO CORSIKA STACK				C  ***  ADD NUCLEON TO CORSIKA STACK
        SECPAR(1)=IQ(NP)					        SECPAR(1)=IQ(NP)
        SECPAR(2)=E(NP)/AMASS5					        SECPAR(2)=E(NP)/AMASS5
        SECPAR(3)=W(NP)						        SECPAR(3)=W(NP)
        SECPAR(4)=ANGLEX					        SECPAR(4)=ANGLEX
        SECPAR(5)=-Z(NP)					        SECPAR(5)=-Z(NP)
        SECPAR(6)=TIME(NP)					        SECPAR(6)=TIME(NP)
        SECPAR(7)=X(NP)						        SECPAR(7)=X(NP)
        SECPAR(8)=-Y(NP)					        SECPAR(8)=-Y(NP)
        SECPAR(11)=1.D0						        SECPAR(11)=1.D0
        SECPAR(12)=0.D0						        SECPAR(12)=0.D0
        CALL TSTOUT						        CALL TSTOUT
       END IF							       END IF
C ***  ELIMINATE NUCLEON FROM EGS-STACK				C ***  ELIMINATE NUCLEON FROM EGS-STACK
       NP=NP-1							       NP=NP-1
      END IF							      END IF
C***  END OF RECOIL NUCLEON TREATEMENT CASE			C***  END OF RECOIL NUCLEON TREATEMENT CASE
      RETURN							      RETURN
      END							      END
