      SUBROUTINE MUTRAC						      SUBROUTINE MUTRAC
 								 
C------------------------------------------------------------	C------------------------------------------------------------
C  MU(ON) TRAC(KING)						C  MU(ON) TRAC(KING)
C								C
C  TRACKS THE MUON REGARDING MAX. STEP LENGTH FOR MULTIPLE SC	C  TRACKS THE MUON REGARDING MAX. STEP LENGTH FOR MULTIPLE SC
C  CHECKS PASSAGE THROUGH OBSERVATION LEVELS			C  CHECKS PASSAGE THROUGH OBSERVATION LEVELS
C  IRET1=1 KILLS PARTICLE					C  IRET1=1 KILLS PARTICLE
C  IRET2=1 PARTICLE HAS BEEN CUTTED IN UPDATE			C  IRET2=1 PARTICLE HAS BEEN CUTTED IN UPDATE
C  THIS SUBROUTINE IS CALLED FROM BOX3				C  THIS SUBROUTINE IS CALLED FROM BOX3
C								C
C  DESIGN  : D. HECK    IK3  FZK KARLSRUHE			C  DESIGN  : D. HECK    IK3  FZK KARLSRUHE
C------------------------------------------------------------	C------------------------------------------------------------
 								 
      IMPLICIT NONE						      IMPLICIT NONE
*KEEP,GENER.							*KEEP,GENER.
      COMMON /GENER/   GEN,ALEVEL				      COMMON /GENER/   GEN,ALEVEL
      DOUBLE PRECISION GEN,ALEVEL				      DOUBLE PRECISION GEN,ALEVEL
*KEEP,IRET.							*KEEP,IRET.
      COMMON /IRET/    IRET1,IRET2				      COMMON /IRET/    IRET1,IRET2
      INTEGER          IRET1,IRET2				      INTEGER          IRET1,IRET2
*KEEP,LONGI.							*KEEP,LONGI.
      COMMON /LONGI/   APLONG,HLONG,PLONG,SPLONG,THSTEP,THSTP	      COMMON /LONGI/   APLONG,HLONG,PLONG,SPLONG,THSTEP,THSTP
     *                 NSTEP,LLONGI,FLGFIT			     *                 NSTEP,LLONGI,FLGFIT
      DOUBLE PRECISION APLONG(0:1040,9),HLONG(0:1024),PLONG(0	      DOUBLE PRECISION APLONG(0:1040,9),HLONG(0:1024),PLONG(0
     *                 SPLONG(0:1040,9),THSTEP,THSTPI		     *                 SPLONG(0:1040,9),THSTEP,THSTPI
      INTEGER          NSTEP					      INTEGER          NSTEP
      LOGICAL          LLONGI,FLGFIT				      LOGICAL          LLONGI,FLGFIT
*KEEP,MUPART.							*KEEP,MUPART.
      COMMON /MUPART/  AMUPAR,BCUT,CMUON,FMUBRM,FMUORG		      COMMON /MUPART/  AMUPAR,BCUT,CMUON,FMUBRM,FMUORG
      DOUBLE PRECISION AMUPAR(14),BCUT,CMUON(11)		      DOUBLE PRECISION AMUPAR(14),BCUT,CMUON(11)
      LOGICAL          FMUBRM,FMUORG				      LOGICAL          FMUBRM,FMUORG
*KEEP,NPARTI.							*KEEP,NPARTI.
      COMMON /NPARTI/  NPARTO,MUOND				      COMMON /NPARTI/  NPARTO,MUOND
      DOUBLE PRECISION NPARTO(10,25),NPHOTO(10),NPOSIT(10),NE	      DOUBLE PRECISION NPARTO(10,25),NPHOTO(10),NPOSIT(10),NE
     *                 NNU(10),NMUP(10),NMUM(10),NPI0(10),NPI	     *                 NNU(10),NMUP(10),NMUM(10),NPI0(10),NPI
     *                 NPIM(10),NK0L(10),NKPL(10),NKMI(10),NN	     *                 NPIM(10),NK0L(10),NKPL(10),NKMI(10),NN
     *                 NPROTO(10),NPROTB(10),NK0S(10),NHYP(10	     *                 NPROTO(10),NPROTB(10),NK0S(10),NHYP(10
     *                 NNEUTB(10),NDEUT(10),NTRIT(10),NALPHA(	     *                 NNEUTB(10),NDEUT(10),NTRIT(10),NALPHA(
     *                 NOTHER(10),MUOND				     *                 NOTHER(10),MUOND
      EQUIVALENCE (NPARTO(1, 1),NPHOTO(1)), (NPARTO(1, 2),NPO	      EQUIVALENCE (NPARTO(1, 1),NPHOTO(1)), (NPARTO(1, 2),NPO
     *            (NPARTO(1, 3),NELECT(1)), (NPARTO(1, 4),NNU	     *            (NPARTO(1, 3),NELECT(1)), (NPARTO(1, 4),NNU
     *            (NPARTO(1, 5),NMUP(1))  , (NPARTO(1, 6),NMU	     *            (NPARTO(1, 5),NMUP(1))  , (NPARTO(1, 6),NMU
     *            (NPARTO(1, 7),NPI0(1))  , (NPARTO(1, 8),NPI	     *            (NPARTO(1, 7),NPI0(1))  , (NPARTO(1, 8),NPI
     *            (NPARTO(1, 9),NPIM(1))  , (NPARTO(1,10),NK0	     *            (NPARTO(1, 9),NPIM(1))  , (NPARTO(1,10),NK0
     *            (NPARTO(1,11),NKPL(1))  , (NPARTO(1,12),NKM	     *            (NPARTO(1,11),NKPL(1))  , (NPARTO(1,12),NKM
     *            (NPARTO(1,13),NNEUTR(1)), (NPARTO(1,14),NPR	     *            (NPARTO(1,13),NNEUTR(1)), (NPARTO(1,14),NPR
     *            (NPARTO(1,15),NPROTB(1)), (NPARTO(1,16),NK0	     *            (NPARTO(1,15),NPROTB(1)), (NPARTO(1,16),NK0
     *            (NPARTO(1,18),NHYP(1))  , (NPARTO(1,19),NDE	     *            (NPARTO(1,18),NHYP(1))  , (NPARTO(1,19),NDE
     *            (NPARTO(1,20),NTRIT(1)) , (NPARTO(1,21),NAL	     *            (NPARTO(1,20),NTRIT(1)) , (NPARTO(1,21),NAL
     *            (NPARTO(1,22),NOTHER(1)), (NPARTO(1,25),NNE	     *            (NPARTO(1,22),NOTHER(1)), (NPARTO(1,25),NNE
*KEEP,OBSPAR.							*KEEP,OBSPAR.
      COMMON /OBSPAR/  OBSLEV,THCKOB,XOFF,YOFF,THETAP,PHIP,	      COMMON /OBSPAR/  OBSLEV,THCKOB,XOFF,YOFF,THETAP,PHIP,
     *                 THETPR,PHIPR,NOBSLV			     *                 THETPR,PHIPR,NOBSLV
      DOUBLE PRECISION OBSLEV(10),THCKOB(10),XOFF(10),YOFF(10	      DOUBLE PRECISION OBSLEV(10),THCKOB(10),XOFF(10),YOFF(10
     *                 THETAP,THETPR(2),PHIP,PHIPR(2)		     *                 THETAP,THETPR(2),PHIP,PHIPR(2)
      INTEGER          NOBSLV					      INTEGER          NOBSLV
*KEEP,PAM.							*KEEP,PAM.
      COMMON /PAM/     PAMA,SIGNUM				      COMMON /PAM/     PAMA,SIGNUM
      DOUBLE PRECISION PAMA(6000),SIGNUM(6000)			      DOUBLE PRECISION PAMA(6000),SIGNUM(6000)
*KEEP,PARPAR.							*KEEP,PARPAR.
      COMMON /PARPAR/  CURPAR,SECPAR,PRMPAR,OUTPAR,C,		      COMMON /PARPAR/  CURPAR,SECPAR,PRMPAR,OUTPAR,C,
     *                 E00,E00PN,PTOT0,PTOT0N,THICKH,ITYPE,LE	     *                 E00,E00PN,PTOT0,PTOT0N,THICKH,ITYPE,LE
      DOUBLE PRECISION CURPAR(14),SECPAR(14),PRMPAR(14),OUTPA	      DOUBLE PRECISION CURPAR(14),SECPAR(14),PRMPAR(14),OUTPA
     *                 C(50),E00,E00PN,PTOT0,PTOT0N,THICKH	     *                 C(50),E00,E00PN,PTOT0,PTOT0N,THICKH
      INTEGER          ITYPE,LEVL				      INTEGER          ITYPE,LEVL
*KEEP,PARPAE.							*KEEP,PARPAE.
      DOUBLE PRECISION GAMMA,COSTHE,PHI,H,T,X,Y,CHI,BETA,GCM,	      DOUBLE PRECISION GAMMA,COSTHE,PHI,H,T,X,Y,CHI,BETA,GCM,
      EQUIVALENCE      (CURPAR(2),GAMMA),  (CURPAR(3),COSTHE)	      EQUIVALENCE      (CURPAR(2),GAMMA),  (CURPAR(3),COSTHE)
     *                 (CURPAR(4), PHI ),  (CURPAR(5), H    )	     *                 (CURPAR(4), PHI ),  (CURPAR(5), H    )
     *                 (CURPAR(6), T   ),  (CURPAR(7), X    )	     *                 (CURPAR(6), T   ),  (CURPAR(7), X    )
     *                 (CURPAR(8), Y   ),  (CURPAR(9), CHI  )	     *                 (CURPAR(8), Y   ),  (CURPAR(9), CHI  )
     *                 (CURPAR(10),BETA),  (CURPAR(11),GCM  )	     *                 (CURPAR(10),BETA),  (CURPAR(11),GCM  )
     *                 (CURPAR(12),ECM )			     *                 (CURPAR(12),ECM )
*KEEP,RUNPAR.							*KEEP,RUNPAR.
      COMMON /RUNPAR/  FIXHEI,THICK0,HILOECM,HILOELB,		      COMMON /RUNPAR/  FIXHEI,THICK0,HILOECM,HILOELB,
     *                 STEPFC,NRRUN,NSHOW,PATAPE,MONIIN,	     *                 STEPFC,NRRUN,NSHOW,PATAPE,MONIIN,
     *                 MONIOU,MDEBUG,NUCNUC,			     *                 MONIOU,MDEBUG,NUCNUC,
     *                 CETAPE,					     *                 CETAPE,
     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,	     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,
     *                 N1STTR,MDBASE,				     *                 N1STTR,MDBASE,
     *                 DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC	     *                 DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC
     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE		     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE
     *                ,GHEISH,GHESIG				     *                ,GHEISH,GHESIG
      COMMON /RUNPAC/  DSN,HOST,USER				      COMMON /RUNPAC/  DSN,HOST,USER
      DOUBLE PRECISION FIXHEI,THICK0,HILOECM,HILOELB		      DOUBLE PRECISION FIXHEI,THICK0,HILOECM,HILOELB
      REAL             STEPFC					      REAL             STEPFC
      INTEGER          NRRUN,NSHOW,PATAPE,MONIIN,MONIOU,MDEBU	      INTEGER          NRRUN,NSHOW,PATAPE,MONIIN,MONIOU,MDEBU
     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,	     *                 SHOWNO,ISHW,NOPART,NRECS,NBLKS,MAXPRT,
     *                 N1STTR,MDBASE				     *                 N1STTR,MDBASE
      INTEGER          CETAPE					      INTEGER          CETAPE
      CHARACTER*79     DSN					      CHARACTER*79     DSN
      CHARACTER*20     HOST,USER				      CHARACTER*20     HOST,USER
 								 
      LOGICAL          DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC	      LOGICAL          DEBDEL,DEBUG,FDECAY,FEGS,FIRSTI,FIXINC
     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE		     *                 FIX1I,FMUADD,FNKG,FPRINT,FDBASE
     *                ,GHEISH,GHESIG				     *                ,GHEISH,GHESIG
*KEND.								*KEND.
 								 
      DOUBLE PRECISION CHITOT,HEIGH,HNEW,PROPAR(8),THCKHN	      DOUBLE PRECISION CHITOT,HEIGH,HNEW,PROPAR(8),THCKHN
      INTEGER          I,IRET3,J,L,LPCT1,LPCT2			      INTEGER          I,IRET3,J,L,LPCT1,LPCT2
      LOGICAL          FSCAT					      LOGICAL          FSCAT
      EXTERNAL         HEIGH					      EXTERNAL         HEIGH
C------------------------------------------------------------	C------------------------------------------------------------
 								 
      IF ( DEBUG ) WRITE(MDEBUG,444) (CURPAR(I),I=1,9)		      IF ( DEBUG ) WRITE(MDEBUG,444) (CURPAR(I),I=1,9)
  444 FORMAT(' MUTRAC: CURPAR=',1P,9E10.3)			  444 FORMAT(' MUTRAC: CURPAR=',1P,9E10.3)
 								 
C  THE PLACE OF NEXT INTERACTION WAS DETERMINED IN BOX2		C  THE PLACE OF NEXT INTERACTION WAS DETERMINED IN BOX2
C  KEEP TOTAL STEP LENGTH UNTIL DECAY OR INTERACTION OCCURS	C  KEEP TOTAL STEP LENGTH UNTIL DECAY OR INTERACTION OCCURS
      CHITOT = CHI						      CHITOT = CHI
 								 
 10   CONTINUE							 10   CONTINUE
 								 
C  CALCULATE MAX STEP SIZE (10 RAD. LENGTH) FOR MULTIPLE SCAT	C  CALCULATE MAX STEP SIZE (10 RAD. LENGTH) FOR MULTIPLE SCAT
      CHI = MIN( C(20), CHITOT )				      CHI = MIN( C(20), CHITOT )
      IF ( CHI .EQ. CHITOT ) THEN				      IF ( CHI .EQ. CHITOT ) THEN
        FSCAT  = .FALSE.					        FSCAT  = .FALSE.
        IF (DEBUG) WRITE(MDEBUG,*)'MUTRAC: CHI=',SNGL(CHI)	        IF (DEBUG) WRITE(MDEBUG,*)'MUTRAC: CHI=',SNGL(CHI)
      ELSE							      ELSE
        FSCAT  = .TRUE.						        FSCAT  = .TRUE.
        IF (DEBUG) WRITE(MDEBUG,*)'MUTRAC: C(20)=',SNGL(C(20)	        IF (DEBUG) WRITE(MDEBUG,*)'MUTRAC: C(20)=',SNGL(C(20)
      ENDIF							      ENDIF
 								 
 								 
C  CALCULATE HIGHT DIFFERENCE IN CM FROM GIVEN CHI IN G/CM**2	C  CALCULATE HIGHT DIFFERENCE IN CM FROM GIVEN CHI IN G/CM**2
      THCKHN = THICKH + COSTHE * CHI				      THCKHN = THICKH + COSTHE * CHI
      HNEW   = HEIGH(THCKHN)					      HNEW   = HEIGH(THCKHN)
      IF (DEBUG) WRITE(MDEBUG,*)'MUTRAC: THICKH,THCKHN,HNEW='	      IF (DEBUG) WRITE(MDEBUG,*)'MUTRAC: THICKH,THCKHN,HNEW='
     *                    SNGL(THICKH),SNGL(THCKHN),SNGL(HNEW	     *                    SNGL(THICKH),SNGL(THCKHN),SNGL(HNEW
C  UPDATE MUON TO INTERACTION POINT (IF IT REACHES SO FAR)	C  UPDATE MUON TO INTERACTION POINT (IF IT REACHES SO FAR)
C  AND STORE COORDINATES IN PROPAR				C  AND STORE COORDINATES IN PROPAR
      CALL UPDATE( HNEW, THCKHN, 0 )				      CALL UPDATE( HNEW, THCKHN, 0 )
      IF ( DEBUG ) THEN						      IF ( DEBUG ) THEN
        WRITE(MDEBUG,455) IRET1,IRET2				        WRITE(MDEBUG,455) IRET1,IRET2
  455   FORMAT(' MUTRAC: IRET1..2=',2I5)			  455   FORMAT(' MUTRAC: IRET1..2=',2I5)
        IF ( IRET2 .EQ. 0 ) WRITE(MDEBUG,454) (OUTPAR(I),I=1,	        IF ( IRET2 .EQ. 0 ) WRITE(MDEBUG,454) (OUTPAR(I),I=1,
  454   FORMAT(' MUTRAC: OUTPAR=',1P,8E10.3)			  454   FORMAT(' MUTRAC: OUTPAR=',1P,8E10.3)
      ENDIF							      ENDIF
C  STORE MUON FOR FURTHER TREATMENT				C  STORE MUON FOR FURTHER TREATMENT
      IF ( IRET2 .EQ. 0 ) THEN					      IF ( IRET2 .EQ. 0 ) THEN
        DO  3  I = 1,8						        DO  3  I = 1,8
          PROPAR(I) = OUTPAR(I)					          PROPAR(I) = OUTPAR(I)
  3     CONTINUE						  3     CONTINUE
        IRET3 = 0						        IRET3 = 0
      ELSE							      ELSE
C  MUON CUTTED AT INTERACTION POINT; IT MAY HOWEVER PASS SOME	C  MUON CUTTED AT INTERACTION POINT; IT MAY HOWEVER PASS SOME
C  OBSERVATION LEVELS						C  OBSERVATION LEVELS
        IRET3 = 1						        IRET3 = 1
      ENDIF							      ENDIF
 								 
C  HERE THE ENDPOINT OF THE CURRENT TRACKING STEP IS WELL DEF	C  HERE THE ENDPOINT OF THE CURRENT TRACKING STEP IS WELL DEF
C  THE MUON IS TRACKED FROM THICKH DOWN TO THICKHN		C  THE MUON IS TRACKED FROM THICKH DOWN TO THICKHN
C  COUNT THE MUONS FOR THE LONGITUDINAL DEVELOPMENT		C  COUNT THE MUONS FOR THE LONGITUDINAL DEVELOPMENT
      IF ( LLONGI ) THEN					      IF ( LLONGI ) THEN
        LPCT1 = INT(THICKH*THSTPI + 1.D0)			        LPCT1 = INT(THICKH*THSTPI + 1.D0)
        LPCT2 = INT(THCKHN*THSTPI)				        LPCT2 = INT(THCKHN*THSTPI)
        LPCT2 = MIN(NSTEP,LPCT2)				        LPCT2 = MIN(NSTEP,LPCT2)
        IF     ( ITYPE .EQ. 6 ) THEN				        IF     ( ITYPE .EQ. 6 ) THEN
          DO 5003 L = LPCT1,LPCT2				          DO 5003 L = LPCT1,LPCT2
            PLONG(L,4) = PLONG(L,4) + 1.D0			            PLONG(L,4) = PLONG(L,4) + 1.D0
 5003     CONTINUE						 5003     CONTINUE
        ELSEIF ( ITYPE .EQ. 5 ) THEN				        ELSEIF ( ITYPE .EQ. 5 ) THEN
          DO 5013 L = LPCT1,LPCT2				          DO 5013 L = LPCT1,LPCT2
            PLONG(L,5) = PLONG(L,5) + 1.D0			            PLONG(L,5) = PLONG(L,5) + 1.D0
 5013     CONTINUE						 5013     CONTINUE
        ENDIF							        ENDIF
      ENDIF							      ENDIF
 								 
C  CHECK OBSERVATION LEVEL PASSAGE AND UPDATE MUON COORDINATE	C  CHECK OBSERVATION LEVEL PASSAGE AND UPDATE MUON COORDINATE
      DO  1  J = 1,NOBSLV					      DO  1  J = 1,NOBSLV
        IF ( HNEW .GT. OBSLEV(J) ) GOTO 2			        IF ( HNEW .GT. OBSLEV(J) ) GOTO 2
        IF ( H    .LT. OBSLEV(J) ) GOTO 1			        IF ( H    .LT. OBSLEV(J) ) GOTO 1
C  REMEMBER NUMBER OF LEVEL FOR OUTPUT				C  REMEMBER NUMBER OF LEVEL FOR OUTPUT
        LEVL  = J						        LEVL  = J
        CALL UPDATE( OBSLEV(J), THCKOB(J), J )			        CALL UPDATE( OBSLEV(J), THCKOB(J), J )
        IF (DEBUG) WRITE(MDEBUG,456) J,IRET1,IRET2		        IF (DEBUG) WRITE(MDEBUG,456) J,IRET1,IRET2
  456   FORMAT(' MUTRAC: OBSLEV=',I5,' IRET1,2=',2I5)		  456   FORMAT(' MUTRAC: OBSLEV=',I5,' IRET1,2=',2I5)
 								 
C  IF MUON IS NOT CUTTED, BRING IT TO OUTPUT			C  IF MUON IS NOT CUTTED, BRING IT TO OUTPUT
        IF ( IRET2 .EQ. 0 ) THEN				        IF ( IRET2 .EQ. 0 ) THEN
          CALL OUTPUT						          CALL OUTPUT
        ENDIF							        ENDIF
  1   CONTINUE							  1   CONTINUE
 								 
C  KILL MUON AS IT DECAYS OR INTERACTS BELOW LOWEST OBSLEVEL	C  KILL MUON AS IT DECAYS OR INTERACTS BELOW LOWEST OBSLEVEL
      IRET1  = 1						      IRET1  = 1
      FMUORG = .FALSE.						      FMUORG = .FALSE.
      RETURN							      RETURN
 								 
C  MUON SCATTERS, DECAYS OR INTERACTS BEFORE PASSING OBSLEVEL	C  MUON SCATTERS, DECAYS OR INTERACTS BEFORE PASSING OBSLEVEL
  2   CONTINUE							  2   CONTINUE
 								 
      IF ( IRET3 .NE. 0 ) THEN					      IF ( IRET3 .NE. 0 ) THEN
C  ELIMINATE MUON IF BELOW CUTS					C  ELIMINATE MUON IF BELOW CUTS
        IRET1  = 1						        IRET1  = 1
        FMUORG = .FALSE.					        FMUORG = .FALSE.
        RETURN							        RETURN
      ENDIF							      ENDIF
C  MUON IS NOW UPDATED TO POINT OF INTERACTION			C  MUON IS NOW UPDATED TO POINT OF INTERACTION
      DO  5  J = 1,8						      DO  5  J = 1,8
        CURPAR(J) = PROPAR(J)					        CURPAR(J) = PROPAR(J)
  5   CONTINUE							  5   CONTINUE
      BETA = SQRT( GAMMA**2 - 1.D0 ) / GAMMA			      BETA = SQRT( GAMMA**2 - 1.D0 ) / GAMMA
      IF ( FSCAT ) THEN						      IF ( FSCAT ) THEN
C  MUON HAS MADE MULTIPLE SCATTERING AND MUST NOW BE TRACKED 	C  MUON HAS MADE MULTIPLE SCATTERING AND MUST NOW BE TRACKED 
        CHITOT = CHITOT - C(20)					        CHITOT = CHITOT - C(20)
        IF ( CHITOT .GT. 0.D0 ) THEN				        IF ( CHITOT .GT. 0.D0 ) THEN
          THICKH = THCKHN					          THICKH = THCKHN
          IF ( DEBUG ) WRITE(MDEBUG,457) (CURPAR(I),I=1,9)	          IF ( DEBUG ) WRITE(MDEBUG,457) (CURPAR(I),I=1,9)
 457      FORMAT(' MUTRAC: SCATTER',1P,9E10.3)			 457      FORMAT(' MUTRAC: SCATTER',1P,9E10.3)
          GOTO 10						          GOTO 10
        ENDIF							        ENDIF
      ENDIF							      ENDIF
C  MUONS HAVE TO DECAY IMMEDIATELY OR TO UNDERGO BREMSSTR./PA	C  MUONS HAVE TO DECAY IMMEDIATELY OR TO UNDERGO BREMSSTR./PA
      IF ( FDECAY ) THEN					      IF ( FDECAY ) THEN
        ALEVEL = H						        ALEVEL = H
        CALL MUDECY						        CALL MUDECY
        MUOND  = MUOND + 1.D0					        MUOND  = MUOND + 1.D0
        FMUORG = .FALSE.					        FMUORG = .FALSE.
C  MUDECY WRITES EM-PARTICLE TO STACK				C  MUDECY WRITES EM-PARTICLE TO STACK
      ELSE							      ELSE
        IF ( FMUBRM ) THEN					        IF ( FMUBRM ) THEN
          CALL MUBREM						          CALL MUBREM
        ELSE							        ELSE
          CALL MUPRPR						          CALL MUPRPR
        ENDIF							        ENDIF
C  MUBREM AND MUPRPR WRITE EM-PARTICLES AND MUON TO STACK	C  MUBREM AND MUPRPR WRITE EM-PARTICLES AND MUON TO STACK
      ENDIF							      ENDIF
      IRET1 = 1							      IRET1 = 1
 								 
      RETURN							      RETURN
      END							      END
